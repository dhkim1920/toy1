FROM rockylinux:8

ENV JAVA_HOME=/usr/lib/jvm/java
ARG SCALA_VERSION=2.12.18
ARG SPARK_VERSION=3.5.6
ARG KAFKA_VERSION=3.4.1
ARG KAFKA_SCALA_VERSION=2.12
ARG PYTHON_VERSION=3.11.9

# 필수 패키지 설치 및 업데이트
RUN dnf -y update && \
    dnf -y install \
    wget \
    unzip \
    tar \
    gzip \
    vim \
    curl \
    make \
    gcc \
    zlib-devel \
    bzip2 \
    bzip2-devel \
    readline-devel \
    libffi-devel \
    openssl-devel \
    dnf-utils \
    curl \
    java-1.8.0-openjdk-devel && \
    dnf clean all

# PostgreSQL 저장소 구성
RUN echo -e "[pgdg16]\n\
name=PostgreSQL 16 for RHEL 8 - x86_64\n\
baseurl=https://download.postgresql.org/pub/repos/yum/16/redhat/rhel-8-x86_64\n\
enabled=1\n\
gpgcheck=0" > /etc/yum.repos.d/pgdg.repo

# PostgreSQL 기본 저장소 비활성화, 16 설치
RUN dnf -qy module disable postgresql && \
    dnf install -y postgresql16 postgresql16-server postgresql16-contrib --skip-broken && \
    dnf clean all

# Python 소스 설치
RUN curl -O https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz && \
    tar xzf Python-${PYTHON_VERSION}.tgz && \
    cd Python-${PYTHON_VERSION} && \
    ./configure --enable-optimizations && \
    make -j$(nproc) && \
    make altinstall && \
    ln -s /usr/local/bin/python3.11 /usr/bin/python3 && \
    cd .. && rm -rf Python-${PYTHON_VERSION}*

# Scala 설치
RUN wget https://downloads.lightbend.com/scala/${SCALA_VERSION}/scala-${SCALA_VERSION}.tgz && \
    tar xzf scala-${SCALA_VERSION}.tgz -C /opt && \
    ln -s /opt/scala-${SCALA_VERSION}/bin/scala /usr/bin/scala && \
    ln -s /opt/scala-${SCALA_VERSION}/bin/scalac /usr/bin/scalac && \
    rm scala-${SCALA_VERSION}.tgz

# Spark 설치
RUN wget https://downloads.apache.org/spark/spark-${SPARK_VERSION}/spark-${SPARK_VERSION}-bin-hadoop3.tgz && \
    tar xzf spark-${SPARK_VERSION}-bin-hadoop3.tgz -C /opt && \
    ln -s /opt/spark-${SPARK_VERSION}-bin-hadoop3 /opt/spark && \
    ln -s /opt/spark/bin/spark-shell /usr/bin/spark-shell && \
    rm spark-${SPARK_VERSION}-bin-hadoop3.tgz

# Kafka 설치
RUN wget https://archive.apache.org/dist/kafka/${KAFKA_VERSION}/kafka_${KAFKA_SCALA_VERSION}-${KAFKA_VERSION}.tgz && \
    tar xzf kafka_${KAFKA_SCALA_VERSION}-${KAFKA_VERSION}.tgz -C /opt && \
    ln -s /opt/kafka_${KAFKA_SCALA_VERSION}-${KAFKA_VERSION} /opt/kafka && \
    ln -s /opt/kafka/bin/kafka-server-start.sh /usr/bin/kafka-server-start && \
    rm kafka_${KAFKA_SCALA_VERSION}-${KAFKA_VERSION}.tgz

ENV PATH="$PATH:/opt/spark/bin:/opt/kafka/bin"

WORKDIR /workspace
RUN mkdir /workspace/data

COPY entrypoint.sh /workspace/entrypoint.sh
RUN chmod +x /workspace/entrypoint.sh

CMD ["/workspace/entrypoint.sh"]